apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    defaultConfig {
        consumerProguardFiles 'consumer-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.core:core-ktx:1.3.2'

    def coroutines = "1.3.7"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    def koin = "2.1.3"
    api "org.koin:koin-core:$koin"
    api "org.koin:koin-androidx-scope:$koin"
    api "org.koin:koin-androidx-viewmodel:$koin"

    def room = "2.2.5"
    api "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"

    def auto_service = '1.0-rc6'
    api "com.google.auto.service:auto-service-annotations:$auto_service"
    kapt "com.google.auto.service:auto-service:$auto_service"

    api 'com.google.code.gson:gson:2.8.6'
    def retrofit = "2.9.0"
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    def okhttp = "4.9.0"
    api "com.squareup.okhttp3:okhttp:$okhttp"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp"

    api "com.jakewharton.timber:timber:4.7.1"

    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"
}
